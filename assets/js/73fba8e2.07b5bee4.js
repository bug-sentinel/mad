"use strict";(self.webpackChunk_equinor_mad_platform_docs=self.webpackChunk_equinor_mad_platform_docs||[]).push([[4991],{362:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var a=o(1085),t=o(1184);const r={sidebar_label:"Implement useLanguage",description:"Learn how to implement useLanguage!"},s="Implement useLanguage",i={id:"mad-core/migration-guide/implement-useLanguage",title:"Implement useLanguage",description:"Learn how to implement useLanguage!",source:"@site/docs/mad-core/migration-guide/7-implement-useLanguage.md",sourceDirName:"mad-core/migration-guide",slug:"/mad-core/migration-guide/implement-useLanguage",permalink:"/mad/docs/mad-core/migration-guide/implement-useLanguage",draft:!1,unlisted:!1,editUrl:"https://github.com/equinor/mad/tree/main/apps/docs/shared/docs/mad-core/migration-guide/7-implement-useLanguage.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_label:"Implement useLanguage",description:"Learn how to implement useLanguage!"},sidebar:"coreSidebar",previous:{title:"Add ErrorBoundary (optional)",permalink:"/mad/docs/mad-core/migration-guide/add-ErrorBoundary"},next:{title:"Implement demo mode",permalink:"/mad/docs/mad-core/migration-guide/implement-demo-mode"}},c={},d=[];function u(e){const n={code:"code",em:"em",h1:"h1",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"implement-uselanguage",children:["Implement ",(0,a.jsx)(n.code,{children:"useLanguage"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"note: If your app only supports one language, you can skip this step"})}),"\n",(0,a.jsxs)(n.p,{children:["If you have language related state in your app, we recommend removing it, and use ",(0,a.jsx)(n.code,{children:"useLanguage"})," from\n",(0,a.jsx)(n.code,{children:"@equinor/mad-core"})," instead."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"const { language } = useLanguage();\n"})}),"\n",(0,a.jsx)(n.p,{children:"This hook will give you information about which language the app is currently using."}),"\n",(0,a.jsxs)(n.p,{children:["One way to implement this, is to create a ",(0,a.jsx)(n.code,{children:"useDictionary"})," hook, to select which json file to read\nstatic text from."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'import { useLanguage } from "@equinor/mad-core";\nimport * as no from "../resources/language/no.json";\nimport * as en from "../resources/language/en.json";\n\nexport const useDictionary = () => {\n    const { language } = useLanguage();\n    switch (language.code) {\n        case "no":\n            return no;\n        default:\n            return en;\n    }\n};\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"const Example = () => {\n    const dictionary = useDictionary();\n    return <Typography>{dictionary.example}</Typography>;\n};\n"})}),"\n",(0,a.jsxs)(n.p,{children:["While ",(0,a.jsx)(n.code,{children:"@equinor/mad-core"})," should handle language selection for you, you can always add code to\nselect language by using ",(0,a.jsx)(n.code,{children:"setSelectedLanguage"})," from ",(0,a.jsx)(n.code,{children:"@equinor/mad-core"}),". You also have access to\n",(0,a.jsx)(n.code,{children:"getLanguage"})," and ",(0,a.jsx)(n.code,{children:"getIsLanguageSelected"}),", if you need access to those methods in contexts where the\n",(0,a.jsx)(n.code,{children:"useLanguage"})," hook cannot be used."]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},1184:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>i});var a=o(4041);const t={},r=a.createContext(t);function s(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);